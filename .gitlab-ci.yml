stages:
 - build
 - test

variables:
  # Variables required by Common CI jobs
  CI_COMMON_JOB_VERSION: "27bf7a315f3cacdf45336501112e6ac414d39006"
  DOCKER_BUILDER_TAG: "$CI_COMMON_JOB_VERSION"
  DOCKER_DIND_TAG: "$CI_COMMON_JOB_VERSION"
  IMAGE_REMOVER_TAG: "$CI_COMMON_JOB_VERSION"

include:
  - template: Workflows/Branch-Pipelines.gitlab-ci.yml
  - project: 'hive/common-ci-configuration'
    ref: 27bf7a315f3cacdf45336501112e6ac414d39006 # develop
    file: '/templates/docker_image_jobs.gitlab-ci.yml'

.docker-base-build-template:
  extends: .docker_image_builder_job_template
  stage: build
  variables:
    BASE_REPO_NAME: base
    BASE_TAG: ubuntu-22.04-1
    NAME: ""
    TARGET: "$NAME-base"
  before_script:
    - !reference [.docker_image_builder_job_template, before_script]
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
  script:
    - |
      echo -e "\e[0Ksection_end:$(date +%s):tag\r\e[0K"
      echo -e "\e[0Ksection_start:$(date +%s):build[collapsed=true]\r\e[0KBaking $NAME${BASE_REPO_NAME:+/$BASE_REPO_NAME} image..."
      function image-exists() {
        local image=$1
        docker manifest inspect "$1" > /dev/null
        return $?
      }
      if image-exists "$CI_REGISTRY_IMAGE/$NAME${BASE_REPO_NAME:+/$BASE_REPO_NAME}:$BASE_TAG"; then
        echo "Image $NAME${BASE_REPO_NAME:+/$BASE_REPO_NAME}:$BASE_TAG already exists. Skipping..."
      else
        echo "Baking $NAME${BASE_REPO_NAME:+/$BASE_REPO_NAME} base image..."
        git config --global --add safe.directory $(pwd)
        docker buildx bake --progress=plain --provenance=false --push "$TARGET"
      fi
      echo -e "\e[0Ksection_end:$(date +%s):build\r\e[0K"
  tags:
    - public-runner-docker

docker-backend-base-build:
  extends: .docker-base-build-template
  variables:
    NAME: "backend"

docker-frontend-base-build:
  extends: .docker-base-build-template
  variables:
    NAME: "frontend"

docker-ci-runner-build:
  extends: .docker-base-build-template
  variables:
    BASE_REPO_NAME: ""
    NAME: "ci-runner"
    TARGET: "ci-runner-ci"

docker-build:
  extends: .docker_image_builder_job_template
  stage: build
  needs:
   - docker-backend-base-build
   - docker-frontend-base-build
  before_script:
    - !reference [.docker_image_builder_job_template, before_script]
    - |
      echo -e "\e[0Ksection_start:$(date +%s):login[collapsed=true]\r\e[0KLogging to Docker registry..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
      echo -e "\e[0Ksection_end:$(date +%s):login\r\e[0K"
  script:
    - |
      echo -e "\e[0Ksection_start:$(date +%s):tag[collapsed=true]\r\e[0KDetermining tag for the new image..."
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
        export TAG="latest"
      else
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $CI_COMMIT_REF_SLUG"
        export TAG="$CI_COMMIT_REF_SLUG"
      fi
      echo -e "\e[0Ksection_end:$(date +%s):tag\r\e[0K"
      echo -e "\e[0Ksection_start:$(date +%s):build[collapsed=true]\r\e[0KBaking frontend and backend images..."
      git config --global --add safe.directory $(pwd)
      docker buildx bake --progress=plain --provenance=false --push ci
      echo -e "\e[0Ksection_end:$(date +%s):build\r\e[0K"
  tags:
    - public-runner-docker