version: '3.9'
name: "haf-world"

services:
  backend-setup:
    image: ${BACKEND_SETUP_REGISTRY:-registry.gitlab.syncad.com/hive/balance_tracker/backend-setup}:${BACKEND_SETUP_VERSION:-latest}
    environment:
      POSTGRES_HOST: haf
    networks:
      haf-network:
    depends_on:
      haf:
        condition: service_healthy
  backend-block-processing:
    image: ${BACKEND_BLOCK_PROCESSING_REGISTRY:-registry.gitlab.syncad.com/hive/balance_tracker/backend-block-processing}:${BACKEND_BLOCK_PROCESSING_VERSION:-latest}
    environment:
      POSTGRES_HOST: haf
      POSTGRES_USER: haf_app_admin
    networks:
      haf-network:
    depends_on:
      backend-setup:
        condition: service_completed_successfully
  backend-postgrest:
    image: ${POSTGREST_REGISTRY:-postgrest/postgrest}:${POSTGREST_VERSION:-latest}
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      PGRST_ADMIN_SERVER_PORT: 3001
      PGRST_DB_URI: postgresql://haf_app_admin@haf:5432/haf_block_log
      PGRST_DB_SCHEMA: btracker_app
      PGRST_DB_ANON_ROLE: btracker_user
      PGRST_DB_POOL: 20
      PGRST_DB_POOL_ACQUISITION_TIMEOUT: 10
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
    networks:
      haf-network:
    depends_on:
      haf:
        condition: service_healthy
      backend-block-processing:
        condition: service_healthy
  swagger:
    image: ${SWAGGER_REGISTRY:-swaggerapi/swagger-ui}:${SWAGGER_VERSION:-latest}
    ports:
      - "8080:8080"
    profiles:
      - swagger
    environment:
      API_URL: http://localhost:3000/
    networks:
      haf-network:
    healthcheck:
      test: ["CMD-SHELL","curl -f localhost:8080"]
    depends_on:
      backend-postgrest:
        condition: service_started

networks:
  haf-network:
    name: ${NETWORK_NAME}
